Das Script ist ein Beispiel für 4*S0 Impuls Zähler und einem SML Zähler Type MT681 auf einer ESP32(x) CPU
Wenn man das Chipinterne Speichern entfernt, dann ist es auch für ESP 8285/8266 geeignet.  

Ist noch nicht ganz fertig, aber als erstes Beispiel sollte es taugen.

Ich verwende hierfür einen ESP32C6zero https://www.waveshare.com/wiki/ESP32-C6-Zero
bezogen von
https://de.aliexpress.com/item/1005006851575663.html?spm=a2g0o.order_list.order_list_main.5.7b785c5f1VQl7o&gatewayAdapt=glo2deu

Es sind meine Tasmota Varianten ohne "RULE" im Namen geeignet.  Bei diesem also tasmota32c6(.factory).bin

CPU Temperatur durch Kommando "SO146 1" aktivieren. ( ESP32(x) CPU )
GPIO8 ist bei ESP32C6zero als WS2812 konfiguriert.

PW steht für Parterre West und ein g davor steht für globale Variable, welche direkt an lokale Tasmota Geräte übermittelt wird.

Vier S0 Impulszähler wurden die GPIO 6,7,9,23 Rückseite verwendet, mittels GND an GPIOx Pad wird ein Impuls gezählt.
SML nutzt GPIO3 als RxD und GPIO1 als TxD für IR TTL-Adapter.
In meinem Beispiel haben die S0 Impulszähler 10 l / Impulse.
Nachdem Sie unter "Werkzeuge/Script konfigurieren" den Haken bei "Script aktivieren" gestzt haben sollten Sie das gesamten Inhalt
incl. ">D" per "Cut´nPaste" einfügen und "speichern" nicht vergessen.

So, nun sollten sie wie im Bild wie "MT681-4xS0Impuls-Zaehler-script.jpg" aussehen. O, ein paar Werte werden noch fehlen.
Jetzt folgen das prüfen der S0 Signaleingänge indem man den jeweiligen GPIO 6,7,9,23 jeweils gegen GND tastet.
Sollte entsprechend Werte beim Zählereingang auslösen.

Nun, da die S0 Impulszählereingänge als funktionstüchtig geprüft sind, möchten Wir den entsprechenden Zählereingang mit dem
aktuellen Wert auf dem Zähler abgleichen.
hierzu verwenden wir "counterX NeuerWert" eingegeben unter "Werkzeuge/Konsole/Befehl eingeben" -> counter1 ENTER -> "Command not found"
gleiches mit 2-4. Hierzu sei bemerkt, das Tasmota sofern kein "Counter x" Eingang in "Einstellungen/Geräteeinstellungen" eingestellt hat
die zugehörigen Kommandos "Werkzeuge/Konsole/Befehl eingeben" z.B. "counter1" auch nicht bereitstellt.
Fehlerumgehung:
Stellen Sie unter "Einstellungen/Geräteeinstellungen/
"IO GPIO6 ->Counter ->1"
"IO GPIO7 ->Counter ->2"
"IO GPIO9 ->Counter ->3"
"IO GPIO23 ->Counter ->4" ein.
->Speichern & nach Reboot ist die Zählerseite verhunzt. Nicht schlimm !

Nun wieder "Werkzeuge/Konsole/Befehl eingeben"
"counter1 NeuerWertCounter1" wobei ja Meine Zähler 10 l / Impuls haben & somit 100 Impulse pro m³ 10150
"counter2 NeuerWertCounter2" ditto. vorher 8048
"counter3 NeuerWertCounter3" ditto. vorher 18198
"counter4 NeuerWertCounter4" ditto. vorher 320450
einzustellen sind. Also NeuerWertCounterX=100*Zählerablesewert (m³)
-> "Werkzeuge" -> "Hauptmenü"
Kontrolle auf der Haupseite Zähler(1 bis 4) !

Wir stellen die Ansicht unter "Einstellungen/Geräteeinstellungen/"
"IO GPIO6 ->none"
"IO GPIO7 ->none"
"IO GPIO9 ->none"
"IO GPIO23 ->none"
 ein. ->Speichern & nach Reboot ist die Zählerseite
hoffentlich wie bei mir OK und die Zählerstände passen. Ansonsten zurück unterhalb "Nicht schlimm !"

Anmerkung zu S0 Impulseingänge werden über die Zeit aufsummiert, aber nicht selbststädig in den
nicht flüchtigen Speicher geflascht. Das ist anders als bei Schaltelementen, Relais zuständen.
erst ein kommando "svars" speicht diese veränderten flüchtigen Werte ab.
siehe Section >R bei Reboot oder >S im Fall der "PWZaehler-20??.CSV" Speicherung um 0:00h .
Es bedeutet auch, das wenn man die Stromversorgung unterbricht, das noch nicht gespeicherte flüchtige Zählerwerte
(S0 Impulse) verloren gehen ! Also erst Reboot, dann ausstecken !

Mein mqtty Broker ist IOBroker mit Instanz "sonoff" Port 1883 installiert.
Die Zählerwerte werden via mqtty an z.B. (wie bei mir) IOBroker übertragen.
Zusätzlich werden einige weitere Wert zusätzlich via mqtty übermittelt.(z.B. Archiv-...)

Es werden globale Variablen mit Wert sowohl gesendet, als auch empfangen, wenn diese von anderen ESP´s versendet wird.
Globale Variablen eignen sich hierzu, da kein großer Konfigurationsaufwand entsteht und der Sender die Empfäger nicht einbinden muss.

Tages Zählerstartwerte werden um 0:00h in eine "PWZaehler-JAHR.CSV" Datei auf Chipinternem Filesystem (320k Byte) geschrieben.
Also jedes Jahr eine weitere Datei. Bitte rechtzeitig vor Überfüllung die alten Dateien rauskopieren geschätzt ca.10Jahre.

Nach ein paar Tagen mit funktionstüchtigem SML Leser mit 4xS0 Impulszählern sehen wir Uns das "Archiv-..." Verzeichnis auf dem IOBroker an.
Uns wird schnell kalr, das das tägliche loggen der Tageszählerwerte xx1.8.0 und xx2.8.0 eine Menge Einträgen verursacht.
Zum ersten prüfen ob alles funktioniert ja ganz schön, aber am Jahresende wären mehr als 700 Einträge zu löschen.
Deshalb empfehle ich Section ">J" die Zeilen mit "day" am Zeilenanfang mit einem ";" zu speichern.
Ab jetzt gibt´s nur noch Monatliche/Jährliche Werte. 

Weitere Sensor Optionen siehe Beschreibung Liesmich-zuerst.txt :
Ich habe einen DS3231(mit internem Temperatursensor) an I²C Bus mit einkompiliert, damit der SML ESP eine lokale
NTP Zeitbasis ermöglicht & auch als NTP Server für weitere LAN Teilnehmer dienen kann.(+Temperaturmessung Zählerschrank)

Anleitung siehe :
https://tasmota.github.io/docs/Smart-Meter-Interface
https://tasmota.github.io/docs/Scripting-Language/
möglicher Reed für Gaszähler:
https://www.conrad.de/de/p/pic-ms-328-3-reed-kontakt-1-schliesser-200-v-dc-140-v-ac-1-a-10-w-503533.html?refresh=true

Hier mein vorläufiges Script.txt :

>D
rssi=0
CPUtemp=0
fr=0
res=0
cnt=0
str=""
hr=0
dy=0
yr=0
swesp=0

;Zähler Variablen evtl. Startwert setzen.
PWKWZ=0
PWWWZ=0
HWZ=0
Gas=0
Ar=",77070100"
Au="ff@1000,"
g:gPW1670=0
g:gPW180=0
g:gPW280=0

;Externe Datenquellen
g:gotemp=0
g:gA1670=0
g:gopress=0

>B

>BS
->sensor53 r

;http://IPv4-dev/ufs/script.txt im Browser
;list of all files in root directory in Log
fr=fo("/" 0)
for cnt 1 20 1
res=fr(str fr)
if res>0
then
print %cnt% : %str%
else
break
endif
next
fc(fr)

>T
rssi=WiFi#rssi
CPUtemp=ESP32#Temperature ;activate with command "SO146 1"
gPW1670=PWMT681#PW16_7_0
gPW180=PWMT681#PW1_8_0
gPW280=PWMT681#PW2_8_0
PWKWZ=PWKWZ#KWZ
PWWWZ=PWWWZ#WWZ
HWZ=HWZ#HWZ
Gas=Gas#Gas

>G

>S
if upsecs%300==0
{
gvr
}

if upsecs%tper==0 {
;knx(26 sml[1]) ;KNX TX1
;knx(27 sml[2]) ;KNX TX2
;knx(28 sml[3]) ;KNX TX3
;knx(29 sml[3]) ;KNX TX4
;knx(30 gPW1670);KNX TX5
}

;0:00h Tagesstart Variablen in Datei PWZaehler-JAHR.CSV schreiben
hr=hours
if chg[hr]>0
and hr==0
then
fr=fo("/PWZaehler-"+s(0year)+".csv" 2)
res=fw(s(0year)+s(0month)+s(0day) fr)
res=fw(";"+s(3gPW180)+";"+s(3gPW280) fr)
res=fw(";"+s(2PWKWZ)+";"+s(2PWWWZ) fr)
res=fw(";"+s(2HWZ)+";"+s(2Gas) fr)
res=fw("\r\n" fr)
fc(fr)
svars
endif ;Day

>J
; Hier wird via mqtt ergänzende Werte mit Datum zum Server übermittelt ;vor Zeile und Wert wird weggelassen ;-) day
,"PWMT681":{"PWMT681-ZNr":"1020130008154711"}
,"Archiv-PWMT681":{"PWMT681-ZNr":"1020130008154711"
,"PWMT681-1_8_0-Y%0year%":%3gPW180%
,"PWMT681-1_8_0-Y%0year%-M%0month%":%3gPW180%
,"PWMT681-1_8_0-Y%0year%-M%0month%-D%0day%":%3gPW180%
,"PWMT681-2_8_0-Y%0year%":%3gPW280%
,"PWMT681-2_8_0-Y%0year%-M%0month%":%3gPW280%
,"PWMT681-2_8_0-Y%0year%-M%0month%-D%0day%":%3gPW280%
}

>R
svars ;speichern der Variablen um Zählverluste zu vermeiden
print Wir starten den ESP %dvnm% neu.

>W
bu(swesp "ESP aktiv" "ESP geblockt")
Timestamp: %tstamp%h {m}
%dvnm% WLAN IP: %lip% {m}%rssi% %%

swesp = %0swesp% zeigt Schalterlaubnis Schaltbutton

Variablen von %dvnm%:
PWKWZ %2PWKWZ% m³
PWWWZ %2PWWWZ% m³
HWZ %2HWZ% m³
Gas %2Gas% m³

Gesendete globale Variablen von %dvnm%:
gPW1670 %1gPW1670% W
gPW180 %4gPW180% kWh
gPW280 %4gPW280% kWh

Globale externe Variablen:
gotemp Außentemperatur %1gotemp% °C von 11ESP8266
gA1670 %1gA1670% W Strom aktuell aus 21ESP32
gopress Luftdruck %1gopress% hPa aus 20ESP8266

>M 5
+1,6,c,1,-100,PWKWZ
1,=h PW Kaltwasser ZNr_2024-553346
1,1-0:1.8.0*255(@100,Kaltwasser Verbrauch,m³,KWZ,2)
1,1-0:1.7.0*255(@0.16667,Kaltwasser akt,l,strom,1)

+2,7,c,1,-100,PWWWZ
2,=h PW Warmwasser ZNr_2024-8795543
2,1-0:1.8.0*255(@100,Warmwasser Verbrauch,m³,WWZ,2)
2,1-0:1.7.0*255(@0.16667,Warmwasser akt,l,strom,1)

+3,9,c,1,-100,HWZ
3,=h PW Hauswasser ZNr_47110815
3,1-0:1.8.0*255(@100,Hauswasser Verbrauch,m³,HWZ,2)
3,1-0:1.7.0*255(@0.16667,Hauswasser akt,l,strom,1)

+4,23,c,1,-500,Gas
4,=h PW Gas ZNr_08154711
4,1-0:1.8.0*255(@100,Gas Verbrauch,m³,Gas,2)
4,1-0:1.8.0*255(@8.695,Gas Verb.kWh,kWh,GaskWh,3)
4,1-0:1.7.0*255(@0.16667,Gas akt Verbrauch,l,strom,2)
4,1-0:1.7.0*255(@0.11519,Gas akt kW,kW,GaskW,3)

+5,5,s,1,9600,PWMT681,3,10
5,=h PW PWMT681 1020130008154711
5,77070100100700ff@1,16.7.0 akt.Leistung,W,PW16_7_0,17
5%Ar%010800%Au%1.8.0 HT&NT Bezug,kWh,PW1_8_0,4
5%Ar%020800%Au%2.8.0 HT&NT Lieferung,kWh,PW2_8_0,4
#